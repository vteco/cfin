<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Category', 'doctrine');

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $lang
 * @property string $meta_title
 * @property string $meta_desc
 * @property string $meta_keywrds
 * @property Doctrine_Collection $News
 * 
 * @method string              getName()         Returns the current record's "name" value
 * @method string              getLang()         Returns the current record's "lang" value
 * @method string              getMetaTitle()    Returns the current record's "meta_title" value
 * @method string              getMetaDesc()     Returns the current record's "meta_desc" value
 * @method string              getMetaKeywrds()  Returns the current record's "meta_keywrds" value
 * @method Doctrine_Collection getNews()         Returns the current record's "News" collection
 * @method Category            setName()         Sets the current record's "name" value
 * @method Category            setLang()         Sets the current record's "lang" value
 * @method Category            setMetaTitle()    Sets the current record's "meta_title" value
 * @method Category            setMetaDesc()     Sets the current record's "meta_desc" value
 * @method Category            setMetaKeywrds()  Sets the current record's "meta_keywrds" value
 * @method Category            setNews()         Sets the current record's "News" collection
 * 
 * @package    cartefinancement
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('lang', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'fr',
             'length' => 255,
             ));
        $this->hasColumn('meta_title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('meta_desc', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('meta_keywrds', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('News', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'uniqueBy' => 
             array(
              0 => 'lang',
             ),
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}