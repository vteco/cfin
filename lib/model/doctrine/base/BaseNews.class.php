<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('News', 'doctrine');

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $lang
 * @property string $title
 * @property string $content
 * @property string $summary
 * @property string $meta_title
 * @property string $meta_desc
 * @property string $meta_keywrds
 * @property boolean $published
 * @property string $image
 * @property boolean $flag
 * @property Category $Category
 * 
 * @method integer  getCategoryId()   Returns the current record's "category_id" value
 * @method string   getLang()         Returns the current record's "lang" value
 * @method string   getTitle()        Returns the current record's "title" value
 * @method string   getContent()      Returns the current record's "content" value
 * @method string   getSummary()      Returns the current record's "summary" value
 * @method string   getMetaTitle()    Returns the current record's "meta_title" value
 * @method string   getMetaDesc()     Returns the current record's "meta_desc" value
 * @method string   getMetaKeywrds()  Returns the current record's "meta_keywrds" value
 * @method boolean  getPublished()    Returns the current record's "published" value
 * @method string   getImage()        Returns the current record's "image" value
 * @method boolean  getFlag()         Returns the current record's "flag" value
 * @method Category getCategory()     Returns the current record's "Category" value
 * @method News     setCategoryId()   Sets the current record's "category_id" value
 * @method News     setLang()         Sets the current record's "lang" value
 * @method News     setTitle()        Sets the current record's "title" value
 * @method News     setContent()      Sets the current record's "content" value
 * @method News     setSummary()      Sets the current record's "summary" value
 * @method News     setMetaTitle()    Sets the current record's "meta_title" value
 * @method News     setMetaDesc()     Sets the current record's "meta_desc" value
 * @method News     setMetaKeywrds()  Sets the current record's "meta_keywrds" value
 * @method News     setPublished()    Sets the current record's "published" value
 * @method News     setImage()        Sets the current record's "image" value
 * @method News     setFlag()         Sets the current record's "flag" value
 * @method News     setCategory()     Sets the current record's "Category" value
 * 
 * @package    cartefinancement
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('news');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('lang', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'fr',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 65535, array(
             'type' => 'string',
             'length' => 65535,
             ));
        $this->hasColumn('summary', 'string', 65535, array(
             'type' => 'string',
             'length' => 65535,
             ));
        $this->hasColumn('meta_title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('meta_desc', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('meta_keywrds', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('flag', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
        $this->actAs($sluggable0);
    }
}